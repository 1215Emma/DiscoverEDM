{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emma\\\\OneDrive\\\\Documents\\\\Spectral-Music\\\\client\\\\src\\\\Dashboard\\\\Components\\\\PlayBar\\\\PlayBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport \"./Playbar.css\";\nimport { ProgressBar } from \"./ProgressBar\";\nimport TrackControls from \"./TrackControls\";\nimport PlayNextSong from \"./PlayNextSong\";\nimport NowPlayingPreview from \"./NowPlayingPreview\";\nimport VolumeControls from \"./VolumeControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PlayBar = ({\n  playbarArtistData,\n  accessToken,\n  playState,\n  setPlayState,\n  setPlaybarArtistData,\n  queueIndex,\n  setQueueIndex,\n  trackClicked\n}) => {\n  _s();\n\n  // const [deviceData, setDeviceData] = useState([])\n  const [pause, setPause] = useState(false);\n  const [repeat, setRepeat] = useState(false);\n  const [shuffleActive, setShuffleActive] = useState(false);\n  const [totalDurationMs, setTotalDurationMs] = useState(0);\n  const [timeoutIndex, setTimeoutIndex] = useState();\n  const [indexZeroCheck, setIndexZeroCheck] = useState(false);\n  const [shuffleDelay, setShuffleDelay] = useState(0);\n\n  const updateState = function (call_back) {\n    setTimeout(function () {\n      call_back();\n    });\n  };\n\n  const isPlaying = useMemo(() => {\n    if (playbarArtistData.length !== 0 && playState) {\n      clearTimeout(timeoutIndex);\n      updateState(function () {\n        PlayNextSong(playbarArtistData, queueIndex, setTotalDurationMs, accessToken, repeat, setTimeoutIndex, setQueueIndex, setPlayState, totalDurationMs);\n      });\n    }\n  }, [queueIndex, playState, accessToken, playbarArtistData]);\n  useEffect(() => {\n    console.log(\"track is starting to play\");\n  }, [isPlaying]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playbar-container\",\n      children: [/*#__PURE__*/_jsxDEV(NowPlayingPreview, {\n        playbarArtistData: playbarArtistData,\n        queueIndex: queueIndex,\n        playState: playState,\n        wait: 1000\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"playbar-play-controls\",\n        children: [/*#__PURE__*/_jsxDEV(TrackControls, {\n          setQueueIndex: setQueueIndex,\n          timeoutIndex: timeoutIndex,\n          queueIndex: queueIndex,\n          playbarArtistData: playbarArtistData,\n          setPlayState: setPlayState,\n          playState: playState,\n          setPause: setPause,\n          setShuffleActive: setShuffleActive,\n          shuffleActive: shuffleActive,\n          pause: pause,\n          setRepeat: setRepeat,\n          repeat: repeat,\n          accessToken: accessToken,\n          setTimeoutIndex: setTimeoutIndex,\n          setTotalDurationMs: setTotalDurationMs,\n          setIndexZeroCheck: setIndexZeroCheck,\n          indexZeroCheck: indexZeroCheck,\n          shuffleDelay: shuffleDelay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          totalDurationMs: totalDurationMs,\n          queueIndex: queueIndex,\n          accessToken: accessToken,\n          setQueueIndex: setQueueIndex,\n          indexZeroCheck: indexZeroCheck,\n          pause: pause,\n          setShuffleDelay: setShuffleDelay,\n          shuffleActive: shuffleActive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VolumeControls, {\n        accessToken: accessToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PlayBar, \"UoSaJ4+Grh8/cW6PTUwJjSuxrZQ=\");\n\n_c = PlayBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayBar\");","map":{"version":3,"sources":["C:/Users/Emma/OneDrive/Documents/Spectral-Music/client/src/Dashboard/Components/PlayBar/PlayBar.js"],"names":["React","useState","useEffect","useMemo","ProgressBar","TrackControls","PlayNextSong","NowPlayingPreview","VolumeControls","PlayBar","playbarArtistData","accessToken","playState","setPlayState","setPlaybarArtistData","queueIndex","setQueueIndex","trackClicked","pause","setPause","repeat","setRepeat","shuffleActive","setShuffleActive","totalDurationMs","setTotalDurationMs","timeoutIndex","setTimeoutIndex","indexZeroCheck","setIndexZeroCheck","shuffleDelay","setShuffleDelay","updateState","call_back","setTimeout","isPlaying","length","clearTimeout","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport \"./Playbar.css\";\r\nimport { ProgressBar } from \"./ProgressBar\";\r\nimport TrackControls from \"./TrackControls\";\r\nimport PlayNextSong from \"./PlayNextSong\";\r\nimport NowPlayingPreview from \"./NowPlayingPreview\";\r\nimport VolumeControls from \"./VolumeControls\";\r\nexport const PlayBar = ({\r\n  playbarArtistData,\r\n  accessToken,\r\n  playState,\r\n  setPlayState,\r\n  setPlaybarArtistData,\r\n  queueIndex,\r\n  setQueueIndex,\r\n  trackClicked,\r\n}) => {\r\n  // const [deviceData, setDeviceData] = useState([])\r\n  const [pause, setPause] = useState(false);\r\n  const [repeat, setRepeat] = useState(false);\r\n  const [shuffleActive, setShuffleActive] = useState(false);\r\n  const [totalDurationMs, setTotalDurationMs] = useState(0);\r\n  const [timeoutIndex, setTimeoutIndex] = useState();\r\n  const [indexZeroCheck, setIndexZeroCheck] = useState(false);\r\n  const [shuffleDelay, setShuffleDelay] = useState(0);\r\n\r\n  const updateState = function (call_back) {\r\n    setTimeout(function () {\r\n      call_back();\r\n    });\r\n  };\r\n\r\n  const isPlaying = useMemo(() => {\r\n    if (playbarArtistData.length !== 0 && playState) {\r\n      clearTimeout(timeoutIndex);\r\n      updateState(function () {\r\n        PlayNextSong(\r\n          playbarArtistData,\r\n          queueIndex,\r\n          setTotalDurationMs,\r\n          accessToken,\r\n          repeat,\r\n          setTimeoutIndex,\r\n          setQueueIndex,\r\n          setPlayState,\r\n          totalDurationMs\r\n        );\r\n      });\r\n    }\r\n  }, [queueIndex, playState, accessToken, playbarArtistData]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"track is starting to play\");\r\n  }, [isPlaying]);\r\n\r\n  return (\r\n    <div className=\"playbar\">\r\n      <div className=\"playbar-container\">\r\n        <NowPlayingPreview\r\n          playbarArtistData={playbarArtistData}\r\n          queueIndex={queueIndex}\r\n          playState={playState}\r\n          wait={1000}\r\n        />\r\n        <div className=\"playbar-play-controls\">\r\n          <TrackControls\r\n            setQueueIndex={setQueueIndex}\r\n            timeoutIndex={timeoutIndex}\r\n            queueIndex={queueIndex}\r\n            playbarArtistData={playbarArtistData}\r\n            setPlayState={setPlayState}\r\n            playState={playState}\r\n            setPause={setPause}\r\n            setShuffleActive={setShuffleActive}\r\n            shuffleActive={shuffleActive}\r\n            pause={pause}\r\n            setRepeat={setRepeat}\r\n            repeat={repeat}\r\n            accessToken={accessToken}\r\n            setTimeoutIndex={setTimeoutIndex}\r\n            setTotalDurationMs={setTotalDurationMs}\r\n            setIndexZeroCheck={setIndexZeroCheck}\r\n            indexZeroCheck={indexZeroCheck}\r\n            shuffleDelay={shuffleDelay}\r\n          />\r\n          <ProgressBar\r\n            totalDurationMs={totalDurationMs}\r\n            queueIndex={queueIndex}\r\n            accessToken={accessToken}\r\n            setQueueIndex={setQueueIndex}\r\n            indexZeroCheck={indexZeroCheck}\r\n            pause={pause}\r\n            setShuffleDelay={setShuffleDelay}\r\n            shuffleActive={shuffleActive}\r\n          />\r\n        </div>\r\n        <VolumeControls accessToken={accessToken} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}