{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emma\\\\OneDrive\\\\Documents\\\\Spectral-Music\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Login } from \"./Dashboard/Components/Login/Login\";\nimport UseAuth from \"./Authentication/useAuthentication\";\nimport { Sidebar } from \"../src/Dashboard/Components/Sidebar/Sidebar\";\nimport { MusicContainer } from \"../src/Dashboard/Components/Music Data Display/MusicContainer\";\nimport { PlayBar } from \"../src/Dashboard/Components/PlayBar/PlayBar\";\nimport { Home } from \"../src/Dashboard/Components/Home/Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst code = new URLSearchParams(window.location.search).get(\"code\"); // check localStorage for the valid tokens\n// have a function that compares the time stamp to current time and if\n// 1. Token doesn't exist => login flow\n// 2. Token exist but expire => fetch refresh => DAshboard\n// 3. Token exists and is valid => Dashboard\n\nconst App = () => {\n  _s();\n\n  // const [state, dispatch] = useReducer(reducer, initialState)\n  const [artistIdentifier, setArtistIdentifier] = useState(\"\");\n  const [playbarArtistData, setPlaybarArtistData] = useState([]);\n  const [playState, setPlayState] = useState(false);\n  const [trackClicked, setTrackClicked] = useState(false);\n  const [queueIndex, setQueueIndex] = useState(0);\n  const [showHome, setShowHome] = useState(true);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const storageCredentials = JSON.parse(localStorage.getItem(\"credentials\"));\n\n  const isLoggedIn = () => {\n    if (code || storageCredentials === null) {\n      UseAuth(code);\n    } else {\n      UseAuth();\n      const accessToken = storageCredentials.accessToken;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dashboard\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-no-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n            setArtistIdentifier: setArtistIdentifier,\n            accessToken: accessToken,\n            setTrackClicked: setTrackClicked,\n            setShowHome: setShowHome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), !showHome ? /*#__PURE__*/_jsxDEV(MusicContainer, {\n            artistIdentifier: artistIdentifier,\n            setPlaybarArtistData: setPlaybarArtistData,\n            playbarArtistData: playbarArtistData,\n            accessToken: accessToken,\n            setPlayState: setPlayState,\n            setQueueIndex: setQueueIndex,\n            playState: playState,\n            trackClicked: trackClicked,\n            setTrackClicked: setTrackClicked,\n            setShowHome: setShowHome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Home, {\n            accessToken: accessToken,\n            setArtistIdentifier: setArtistIdentifier,\n            setTrackClicked: setTrackClicked,\n            showHome: showHome,\n            setShowHome: setShowHome\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PlayBar, {\n            playbarArtistData: playbarArtistData,\n            accessToken: accessToken,\n            playState: playState,\n            setPlayState: setPlayState,\n            setPlaybarArtistData: setPlaybarArtistData,\n            setQueueIndex: setQueueIndex,\n            queueIndex: queueIndex,\n            trackClicked: trackClicked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: code ? isLoggedIn() : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 35\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"71sNtCBZ+iH91NZL+fsIkv7nfQA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Emma/OneDrive/Documents/Spectral-Music/client/src/App.js"],"names":["React","useState","Login","UseAuth","Sidebar","MusicContainer","PlayBar","Home","code","URLSearchParams","window","location","search","get","App","artistIdentifier","setArtistIdentifier","playbarArtistData","setPlaybarArtistData","playState","setPlayState","trackClicked","setTrackClicked","queueIndex","setQueueIndex","showHome","setShowHome","loggedIn","setLoggedIn","storageCredentials","JSON","parse","localStorage","getItem","isLoggedIn","accessToken"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Login } from \"./Dashboard/Components/Login/Login\";\r\nimport UseAuth from \"./Authentication/useAuthentication\";\r\nimport { Sidebar } from \"../src/Dashboard/Components/Sidebar/Sidebar\";\r\nimport { MusicContainer } from \"../src/Dashboard/Components/Music Data Display/MusicContainer\";\r\nimport { PlayBar } from \"../src/Dashboard/Components/PlayBar/PlayBar\";\r\nimport { Home } from \"../src/Dashboard/Components/Home/Home\";\r\nconst code = new URLSearchParams(window.location.search).get(\"code\");\r\n\r\n// check localStorage for the valid tokens\r\n// have a function that compares the time stamp to current time and if\r\n// 1. Token doesn't exist => login flow\r\n\r\n// 2. Token exist but expire => fetch refresh => DAshboard\r\n\r\n// 3. Token exists and is valid => Dashboard\r\n\r\nconst App = () => {\r\n  // const [state, dispatch] = useReducer(reducer, initialState)\r\n  const [artistIdentifier, setArtistIdentifier] = useState(\"\");\r\n  const [playbarArtistData, setPlaybarArtistData] = useState([]);\r\n  const [playState, setPlayState] = useState(false);\r\n  const [trackClicked, setTrackClicked] = useState(false);\r\n  const [queueIndex, setQueueIndex] = useState(0);\r\n  const [showHome, setShowHome] = useState(true);\r\n  const [loggedIn, setLoggedIn] = useState(false)\r\n  const storageCredentials = JSON.parse(localStorage.getItem(\"credentials\"));\r\n  \r\n  const isLoggedIn = () => {\r\n    if (code || storageCredentials === null) {\r\n      UseAuth(code);\r\n      \r\n    } else {\r\n        UseAuth();\r\n        const accessToken = storageCredentials.accessToken;\r\n        return (\r\n          <div className=\"Dashboard\">\r\n          <div className=\"dashboard-no-sidebar\">\r\n            <Sidebar\r\n              setArtistIdentifier={setArtistIdentifier}\r\n              accessToken={accessToken}\r\n              setTrackClicked={setTrackClicked}\r\n              setShowHome={setShowHome}\r\n              />\r\n\r\n            {!showHome ? (\r\n              <MusicContainer\r\n              artistIdentifier={artistIdentifier}\r\n              setPlaybarArtistData={setPlaybarArtistData}\r\n              playbarArtistData={playbarArtistData}\r\n              accessToken={accessToken}\r\n              setPlayState={setPlayState}\r\n              setQueueIndex={setQueueIndex}\r\n              playState={playState}\r\n              trackClicked={trackClicked}\r\n              setTrackClicked={setTrackClicked}\r\n              setShowHome={setShowHome}\r\n              />\r\n              ) : (\r\n                <Home\r\n                accessToken={accessToken}\r\n                setArtistIdentifier={setArtistIdentifier}\r\n                setTrackClicked={setTrackClicked}\r\n                showHome={showHome}\r\n                setShowHome={setShowHome}\r\n                />\r\n                )}\r\n            <PlayBar\r\n              playbarArtistData={playbarArtistData}\r\n              accessToken={accessToken}\r\n              playState={playState}\r\n              setPlayState={setPlayState}\r\n              setPlaybarArtistData={setPlaybarArtistData}\r\n              setQueueIndex={setQueueIndex}\r\n              queueIndex={queueIndex}\r\n              trackClicked={trackClicked}\r\n              />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return <>{code ? isLoggedIn() : <Login />}</>;\r\n};\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}