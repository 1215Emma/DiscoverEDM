{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emma\\\\OneDrive\\\\Documents\\\\Spectral-Music\\\\client\\\\src\\\\Dashboard\\\\Components\\\\PlayBar\\\\NowPlayingPreview.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NowPlayingPreview = props => {\n  const playbarArtistData = props.playbarArtistData;\n  const queueIndex = props.queueIndex;\n  const playState = props.playState;\n\n  const artistNames = () => {\n    let output = \"\";\n\n    for (let i = 0; i < playbarArtistData[queueIndex].artists.length; i++) {\n      let artistName = playbarArtistData[queueIndex].artists[i].name;\n      output += artistName;\n\n      if (i < playbarArtistData[queueIndex].artists.length - 1) {\n        output += \", \";\n      }\n\n      output += \"\";\n    }\n\n    if (output.length > 40) {\n      output = output.slice(0, 40) + \"...\";\n    }\n\n    return output;\n  };\n\n  const trackName = () => {\n    let trackTitle = playbarArtistData[queueIndex].name;\n\n    if (trackTitle.length > 33) {\n      trackTitle = trackTitle.slice(0, 33) + \"...\";\n    }\n\n    return trackTitle;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: playState && playbarArtistData.length > 0 && queueIndex <= playbarArtistData.length - 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playbar-current-track\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"now-playing-album-cover\",\n        src: playbarArtistData[queueIndex].album.images[1].url,\n        alt: \"album-artist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"now-playing-track\",\n        children: trackName()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"now-playing-artists\",\n        children: artistNames()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fill: \"white\"\n      },\n      className: \"playbar-current-track\",\n      children: \"showing nothing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_c = NowPlayingPreview;\nexport default NowPlayingPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"NowPlayingPreview\");","map":{"version":3,"sources":["C:/Users/Emma/OneDrive/Documents/Spectral-Music/client/src/Dashboard/Components/PlayBar/NowPlayingPreview.js"],"names":["NowPlayingPreview","props","playbarArtistData","queueIndex","playState","artistNames","output","i","artists","length","artistName","name","slice","trackName","trackTitle","album","images","url","fill"],"mappings":";;;;AAAA,MAAMA,iBAAiB,GAAIC,KAAD,IAAW;AACnC,QAAMC,iBAAiB,GAAGD,KAAK,CAACC,iBAAhC;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACE,UAAzB;AACA,QAAMC,SAAS,GAAGH,KAAK,CAACG,SAAxB;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,iBAAiB,CAACC,UAAD,CAAjB,CAA8BK,OAA9B,CAAsCC,MAA1D,EAAkEF,CAAC,EAAnE,EAAuE;AACrE,UAAIG,UAAU,GAAGR,iBAAiB,CAACC,UAAD,CAAjB,CAA8BK,OAA9B,CAAsCD,CAAtC,EAAyCI,IAA1D;AACAL,MAAAA,MAAM,IAAII,UAAV;;AACA,UAAIH,CAAC,GAAGL,iBAAiB,CAACC,UAAD,CAAjB,CAA8BK,OAA9B,CAAsCC,MAAtC,GAA+C,CAAvD,EAA0D;AACxDH,QAAAA,MAAM,IAAI,IAAV;AACD;;AACDA,MAAAA,MAAM,IAAI,EAAV;AACD;;AACD,QAAIA,MAAM,CAACG,MAAP,GAAgB,EAApB,EAAwB;AACtBH,MAAAA,MAAM,GAAGA,MAAM,CAACM,KAAP,CAAa,CAAb,EAAgB,EAAhB,IAAsB,KAA/B;AACD;;AACD,WAAON,MAAP;AACD,GAdD;;AAgBA,QAAMO,SAAS,GAAG,MAAM;AACtB,QAAIC,UAAU,GAAGZ,iBAAiB,CAACC,UAAD,CAAjB,CAA8BQ,IAA/C;;AACA,QAAIG,UAAU,CAACL,MAAX,GAAoB,EAAxB,EAA4B;AAC1BK,MAAAA,UAAU,GAAGA,UAAU,CAACF,KAAX,CAAiB,CAAjB,EAAoB,EAApB,IAA0B,KAAvC;AACD;;AACD,WAAOE,UAAP;AACD,GAND;;AAOA,sBACE;AAAA,cACGV,SAAS,IACVF,iBAAiB,CAACO,MAAlB,GAA2B,CAD1B,IAEDN,UAAU,IAAID,iBAAiB,CAACO,MAAlB,GAA2B,CAFxC,gBAGC;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,yBADZ;AAEE,QAAA,GAAG,EAAEP,iBAAiB,CAACC,UAAD,CAAjB,CAA8BY,KAA9B,CAAoCC,MAApC,CAA2C,CAA3C,EAA8CC,GAFrD;AAGE,QAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBAAoCJ,SAAS;AAA7C;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,kBAAsCR,WAAW;AAAjD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD,gBAcC;AAAK,MAAA,KAAK,EAAE;AAAEa,QAAAA,IAAI,EAAE;AAAR,OAAZ;AAA+B,MAAA,SAAS,EAAC,uBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfJ,mBADF;AAsBD,CAlDD;;KAAMlB,iB;AAoDN,eAAeA,iBAAf","sourcesContent":["const NowPlayingPreview = (props) => {\r\n  const playbarArtistData = props.playbarArtistData;\r\n  const queueIndex = props.queueIndex;\r\n  const playState = props.playState;\r\n\r\n  const artistNames = () => {\r\n    let output = \"\";\r\n    for (let i = 0; i < playbarArtistData[queueIndex].artists.length; i++) {\r\n      let artistName = playbarArtistData[queueIndex].artists[i].name;\r\n      output += artistName;\r\n      if (i < playbarArtistData[queueIndex].artists.length - 1) {\r\n        output += \", \";\r\n      }\r\n      output += \"\";\r\n    }\r\n    if (output.length > 40) {\r\n      output = output.slice(0, 40) + \"...\";\r\n    }\r\n    return output;\r\n  };\r\n\r\n  const trackName = () => {\r\n    let trackTitle = playbarArtistData[queueIndex].name;\r\n    if (trackTitle.length > 33) {\r\n      trackTitle = trackTitle.slice(0, 33) + \"...\";\r\n    }\r\n    return trackTitle;\r\n  };\r\n  return (\r\n    <>\r\n      {playState &&\r\n      playbarArtistData.length > 0 &&\r\n      queueIndex <= playbarArtistData.length - 1 ? (\r\n        <div className=\"playbar-current-track\">\r\n          <img\r\n            className=\"now-playing-album-cover\"\r\n            src={playbarArtistData[queueIndex].album.images[1].url}\r\n            alt=\"album-artist\"\r\n          ></img>\r\n\r\n          <div className=\"now-playing-track\">{trackName()}</div>\r\n          <div className=\"now-playing-artists\">{artistNames()}</div>\r\n        </div>\r\n      ) : (\r\n        <div style={{ fill: \"white\" }} className=\"playbar-current-track\">\r\n          showing nothing\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NowPlayingPreview;\r\n"]},"metadata":{},"sourceType":"module"}